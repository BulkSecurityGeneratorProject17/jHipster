{
  "manifest": {
    "name": "angular2-template-loader",
    "version": "0.6.2",
    "description": "Angular2 webpack loader that inlines your angular2 templates and stylesheets into angular components.  ",
    "main": "index.js",
    "scripts": {
      "test": "mocha --reporter spec",
      "coverage": "istanbul cover _mocha -- -R spec",
      "preversion": "npm test",
      "version": "git add -A",
      "postversion": "git push && git push --tags",
      "release:patch": "npm version patch && git push && git push --tags && npm publish"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/TheLarkInn/angular2-template-loader.git"
    },
    "keywords": [
      "angular2",
      "webpack",
      "angularjs",
      "loader",
      "angular2-loader"
    ],
    "author": {
      "name": "Sean Larkin"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/TheLarkInn/angular2-template-loader/issues"
    },
    "homepage": "https://github.com/TheLarkInn/angular2-template-loader#readme",
    "devDependencies": {
      "codecov": "^1.0.1",
      "istanbul": "^0.4.3",
      "mocha": "^2.5.3",
      "should": "^9.0.0"
    },
    "dependencies": {
      "loader-utils": "^0.2.15"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-angular2-template-loader-0.6.2-c0d44e90fff0fac95e8b23f043acda7fd1c51d7c/package.json",
    "readmeFilename": "README.md",
    "readme": "# angular2-template-loader\nChain-to loader for webpack that inlines all html and style's in angular2 components.\n\n[![Build Status](https://travis-ci.org/TheLarkInn/angular2-template-loader.svg?branch=master)](https://travis-ci.org/TheLarkInn/angular2-template-loader)\n[![Coverage](https://codecov.io/gh/TheLarkInn/angular2-template-loader/branch/master/graph/badge.svg)](https://codecov.io/gh/TheLarkInn/angular2-template-loader)\n[![Taylor Swift](https://img.shields.io/badge/secured%20by-taylor%20swift-brightgreen.svg)](https://twitter.com/SwiftOnSecurity)\n\n### Quick Links\n- [Installation](#installation)\n- [Requirements](#requirements)\n- [Example usage](#example-usage)\n- [How does it work](#how-does-it-work)\n- [Common Issues](#common-issues)\n\n### Installation\nInstall the webpack loader from [npm](https://www.npmjs.com/package/angular2-template-loader).\n- `npm install angular2-template-loader --save-dev`\n\nChain the `angular2-template-loader` to your currently used typescript loader.\n\n```js\nloaders: ['awesome-typescript-loader', 'angular2-template-loader'],\n```\n\n### Requirements\nTo be able to use the template loader you must have a loader registered, which can handle `.html` and `.css` files.\n> The most recommended loader is [`raw-loader`](https://github.com/webpack/raw-loader)\n\nThis loader allows you to decouple templates from the component file and maintain AoT compilation. This is particularly useful  when building complex components that have large templates.\n\n### Example Usage\n\n#### Webpack\nHere is an example markup of the `webpack.config.js`, which chains the `angular2-template-loader` to the `tsloader`\n\n```js\nmodule: {\n  loaders: [\n    {\n      test: /\\.ts$/,\n      loaders: ['awesome-typescript-loader', 'angular2-template-loader?keepUrl=true'],\n      exclude: [/\\.(spec|e2e)\\.ts$/]\n    },\n    /* Embed files. */\n    { \n      test: /\\.(html|css)$/, \n      loader: 'raw-loader',\n      exclude: /\\.async\\.(html|css)$/\n    },\n    /* Async loading. */\n    {\n      test: /\\.async\\.(html|css)$/, \n      loaders: ['file?name=[name].[hash].[ext]', 'extract']\n    }\n  ]\n}\n```\n\n#### Angular\n```js\n@Component({\n  selector: 'awesome-button',\n  template: require('./button.template.html'),\n  styles: [require('./button.style.css')]\n})\nexport class AwesomeButtonComponent { }\n```\n\n### How does it work\nThe `angular2-template-loader` searches for `templateUrl` and `styleUrls` declarations inside of the Angular 2 Component metadata and replaces the paths with the corresponding `require` statement.\nIf `keepUrl=true` is added to the loader's query string, `templateUrl` and `styleUrls` will not be replaced by `template` and `style` respectively so you can use a loader like `file-loader`.\n\nThe generated `require` statements will be handled by the given loader for `.html` and `.js` files.\n\n### Common Issues\nIn some cases the webpack compilation will fail due to unknown `require` statements in the source.<br/>\nThis is caused by the [way the template loader works](#how-does-it-work). \n\n> The Typescript transpiler doesn't have any typings for the `require` method, which was generated by the loader.\n\nWe recommend the installation of type defintions, which contain a declaration of the `require` method.\n- [@types/node](https://www.npmjs.com/package/@types/node) | [dt~node](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/node/node.d.ts)\n- [@types/requirejs](https://www.npmjs.com/package/@types/requirejs) | [dt~requirejs](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/requirejs)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Sean Larkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/angular2-template-loader/-/angular2-template-loader-0.6.2.tgz#c0d44e90fff0fac95e8b23f043acda7fd1c51d7c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/angular2-template-loader/-/angular2-template-loader-0.6.2.tgz",
    "hash": "c0d44e90fff0fac95e8b23f043acda7fd1c51d7c",
    "registry": "npm",
    "packageName": "angular2-template-loader"
  },
  "registry": "npm",
  "hash": "c0d44e90fff0fac95e8b23f043acda7fd1c51d7c"
}