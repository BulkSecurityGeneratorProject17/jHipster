{
  "manifest": {
    "name": "fastseries",
    "version": "1.7.2",
    "description": "Zero-overhead asynchronous series/each/map function calls",
    "main": "series.js",
    "scripts": {
      "lint": "standard",
      "test": "tape test.js | faucet",
      "coverage": "istanbul cover tape test.js; cat coverage/lcov.info | coveralls"
    },
    "pre-commit": [
      "lint",
      "test"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/mcollina/fastseries.git"
    },
    "keywords": [
      "series",
      "fast",
      "async"
    ],
    "author": {
      "name": "Matteo Collina",
      "email": "hello@matteocollina.com"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/mcollina/fastseries/issues"
    },
    "homepage": "https://github.com/mcollina/fastseries",
    "devDependencies": {
      "async": "^1.5.0",
      "coveralls": "^2.11.6",
      "fastbench": "^1.0.0",
      "faucet": "0.0.1",
      "istanbul": "^0.4.1",
      "neo-async": "^1.7.0",
      "pre-commit": "^1.0.6",
      "standard": "^5.4.1",
      "tape": "^4.2.2",
      "tiny-each-async": "^2.0.2"
    },
    "dependencies": {
      "reusify": "^1.0.0",
      "xtend": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-fastseries-1.7.2-d22ce13b9433dff3388d91dbd6b8bda9b21a0f4b/package.json",
    "readmeFilename": "README.md",
    "readme": "# fastseries\n\n[![npm version][npm-badge]][npm-url]\n[![Build Status][travis-badge]][travis-url]\n[![Coverage Status][coveralls-badge]][coveralls-url]\n[![Dependency Status][david-badge]][david-url]\n\nZero-overhead series function call for node.js.\nAlso supports `each` and `map`!\n\nBenchmark for doing 3 calls `setImmediate` 1 million times:\n\n* non-reusable `setImmediate`: 3887ms\n* `async.series`: 5981ms\n* `async.eachSeries`: 5087ms\n* `async.mapSeries`: 5540ms\n* `neoAsync.series`: 4338ms\n* `neoAsync.eachSeries`: 4195ms\n* `neoAsync.mapSeries`: 4237ms\n* `tiny-each-async`: 4575ms\n* `fastseries` with results: 4096ms\n* `fastseries` without results: 4063ms\n* `fastseries` map: 4032ms\n* `fastseries` each: 4168ms\n\nThese benchmarks where taken via `bench.js` on node 4.2.2, on a MacBook\nPro Retina 2014.\n\nIf you need zero-overhead parallel function call, check out\n[fastparallel](http://npm.im/fastparallel).\n\n[![js-standard-style](https://raw.githubusercontent.com/feross/standard/master/badge.png)](https://github.com/feross/standard)\n\n## Example for series call\n\n```js\nvar series = require('fastseries')({\n  // this is a function that will be called\n  // when a series completes\n  released: completed,\n\n  // if you want the results, then here you are\n  results: true\n})\n\nseries(\n  {}, // what will be this in the functions\n  [something, something, something], // functions to call\n  42, // the first argument of the functions\n  done // the function to be called when the series ends\n)\n\nfunction late (arg, cb) {\n  console.log('finishing', arg)\n  cb(null, 'myresult-' + arg)\n}\n\nfunction something (arg, cb) {\n  setTimeout(late, 1000, arg, cb)\n}\n\nfunction done (err, results) {\n  console.log('series completed, results:', results)\n}\n\nfunction completed () {\n  console.log('series completed!')\n}\n```\n\n## Example for each and map calls\n\n```js\nvar series = require('fastseries')({\n  // this is a function that will be called\n  // when a series completes\n  released: completed,\n\n  // if you want the results, then here you are\n  // passing false disables map\n  results: true\n})\n\nseries(\n  {}, // what will be this in the functions\n  something, // functions to call\n  [1, 2, 3], // the first argument of the functions\n  done // the function to be called when the series ends\n)\n\nfunction late (arg, cb) {\n  console.log('finishing', arg)\n  cb(null, 'myresult-' + arg)\n}\n\nfunction something (arg, cb) {\n  setTimeout(late, 1000, arg, cb)\n}\n\nfunction done (err, results) {\n  console.log('series completed, results:', results)\n}\n\nfunction completed () {\n  console.log('series completed!')\n}\n\n```\n\n## Caveats\n\nThe `done` function will be called only once, even if more than one error happen.\n\nThis library works by caching the latest used function, so that running a new series\ndoes not cause **any memory allocations**.\n\n## License\n\nISC\n\n[npm-badge]: https://badge.fury.io/js/fastseries.svg\n[npm-url]: https://badge.fury.io/js/fastseries\n[travis-badge]: https://api.travis-ci.org/mcollina/fastseries.svg\n[travis-url]: https://travis-ci.org/mcollina/fastseries\n[coveralls-badge]:https://coveralls.io/repos/mcollina/fastseries/badge.svg?branch=master&service=github\n[coveralls-url]: https://coveralls.io/github/mcollina/fastseries?branch=master\n[david-badge]: https://david-dm.org/mcollina/fastseries.svg\n[david-url]: https://david-dm.org/mcollina/fastseries\n",
    "licenseText": "Copyright (c) 2015, Matteo Collina <matteo.collina@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/fastseries/-/fastseries-1.7.2.tgz#d22ce13b9433dff3388d91dbd6b8bda9b21a0f4b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/fastseries/-/fastseries-1.7.2.tgz",
    "hash": "d22ce13b9433dff3388d91dbd6b8bda9b21a0f4b",
    "registry": "npm",
    "packageName": "fastseries"
  },
  "registry": "npm",
  "hash": "d22ce13b9433dff3388d91dbd6b8bda9b21a0f4b"
}