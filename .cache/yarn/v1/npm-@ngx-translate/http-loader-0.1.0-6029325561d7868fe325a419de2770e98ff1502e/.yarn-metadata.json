{
  "manifest": {
    "name": "@ngx-translate/http-loader",
    "description": "A loader for ngx-translate that loads translations using http",
    "version": "0.1.0",
    "scripts": {
      "clean": "rimraf bundles coverage src/**/*.d.ts src/**/*.metadata.json src/**/*.js tests/**/*.d.ts tests/**/*.metadata.json tests/**/*.js index.d.ts index.metadata.json index.js",
      "test": "karma start",
      "test-watch": "karma start --singleRun=false --autoWatch=true",
      "prepublish": "ngc && npm run build",
      "build": "webpack",
      "semantic-release": "semantic-release pre && npm publish && semantic-release post"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ngx-translate/http-loader.git"
    },
    "keywords": [
      "angular",
      "angular 2",
      "i18n",
      "translate",
      "ngx-translate"
    ],
    "author": {
      "name": "Olivier Combe"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/ngx-translate/http-loader/issues"
    },
    "homepage": "https://github.com/ngx-translate/http-loader#readme",
    "main": "bundles/http-loader.umd.js",
    "module": "index.js",
    "typings": "index.d.ts",
    "peerDependencies": {
      "@ngx-translate/core": ">=6.0.0",
      "@angular/core": ">=2.0.0",
      "@angular/http": ">=2.0.0"
    },
    "devDependencies": {
      "@angular/animations": "4.1.3",
      "@angular/common": "4.1.3",
      "@angular/compiler": "4.1.3",
      "@angular/compiler-cli": "4.1.3",
      "@angular/core": "4.1.3",
      "@angular/http": "4.1.3",
      "@ngx-translate/core": "7.0.0",
      "@angular/platform-browser": "4.1.3",
      "@angular/platform-browser-dynamic": "4.1.3",
      "@angular/platform-server": "4.1.3",
      "@types/hammerjs": "2.0.34",
      "@types/jasmine": "2.5.51",
      "@types/node": "7.0.28",
      "awesome-typescript-loader": "3.1.3",
      "clean-webpack-plugin": "0.1.16",
      "codelyzer": "3.0.1",
      "commitizen": "2.9.6",
      "core-js": "2.4.1",
      "cz-conventional-changelog": "2.0.0",
      "istanbul-instrumenter-loader": "2.0.0",
      "jasmine-core": "2.6.2",
      "karma": "1.7.0",
      "karma-chrome-launcher": "2.1.1",
      "karma-coverage": "1.1.1",
      "karma-jasmine": "1.1.0",
      "karma-mocha-reporter": "2.2.3",
      "karma-remap-coverage": "0.1.4",
      "karma-sourcemap-loader": "0.3.7",
      "karma-webpack": "2.0.3",
      "loader-utils": "1.1.0",
      "reflect-metadata": "0.1.10",
      "rimraf": "2.6.1",
      "rxjs": "5.4.0",
      "semantic-release": "6.3.6",
      "source-map-loader": "0.2.1",
      "ts-helpers": "1.1.2",
      "tslint": "5.4.3",
      "tslint-loader": "3.5.3",
      "typescript": "2.3.4",
      "webpack": "3.0.0-rc.1",
      "zone.js": "0.8.11"
    },
    "config": {
      "commitizen": {
        "path": "./node_modules/cz-conventional-changelog"
      }
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-@ngx-translate/http-loader-0.1.0-6029325561d7868fe325a419de2770e98ff1502e/package.json",
    "readmeFilename": "README.md",
    "readme": "# @ngx-translate/http-loader [![Build Status](https://travis-ci.org/ngx-translate/http-loader.svg?branch=master)](https://travis-ci.org/ngx-translate/http-loader) [![npm version](https://img.shields.io/npm/v/@ngx-translate/http-loader.svg)](https://www.npmjs.com/package/@ngx-translate/http-loader)\n\nA loader for [ngx-translate](https://github.com/ngx-translate/core) that loads translations using http.\n\nGet the complete changelog here: https://github.com/ngx-translate/http-loader/releases\n\n* [Installation](#installation)\n* [Usage](#usage)\n\n## Installation\n\nWe assume that you already installed [ngx-translate](https://github.com/ngx-translate/core).\n\nNow you need to install the npm module for `TranslateHttpLoader`:\n\n```sh\nnpm install @ngx-translate/http-loader --save\n```\n\n## Usage\n#### 1. Setup the `TranslateModule` to use the `TranslateHttpLoader`:\n\nThe `TranslateHttpLoader` uses Http to load translations, which means that you have to import the HttpModule from `@angular/http` before the `TranslateModule`:\n\n```ts\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpModule, Http} from '@angular/http';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {AppComponent} from \"./app\";\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: Http) {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [Http]\n            }\n        })\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\nThe `TranslateHttpLoader` also has two optional parameters:\n- prefix: string = \"/assets/i18n/\"\n- suffix: string = \".json\"\n\nBy using those default parameters, it will load your translations files for the lang \"en\" from: `/assets/i18n/en.json`.\n\nYou can change those in the `HttpLoaderFactory` method that we just defined. For example if you want to load the \"en\" translations from `/public/lang-files/en-lang.json` you would use:\n\n```ts\nexport function HttpLoaderFactory(http: Http) {\n    return new TranslateHttpLoader(http, \"/public/lang-files/\", \"-lang.json\");\n}\n```\n\nFor now this loader only support the json format.\n",
    "licenseText": "Copyright (c) 2016 Olivier Combe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@ngx-translate/http-loader/-/http-loader-0.1.0.tgz#6029325561d7868fe325a419de2770e98ff1502e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@ngx-translate/http-loader/-/http-loader-0.1.0.tgz",
    "hash": "6029325561d7868fe325a419de2770e98ff1502e",
    "registry": "npm",
    "packageName": "@ngx-translate/http-loader"
  },
  "registry": "npm",
  "hash": "6029325561d7868fe325a419de2770e98ff1502e"
}