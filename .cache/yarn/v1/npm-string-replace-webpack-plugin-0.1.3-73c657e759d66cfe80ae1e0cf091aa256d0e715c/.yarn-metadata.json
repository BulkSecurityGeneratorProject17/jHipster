{
  "manifest": {
    "name": "string-replace-webpack-plugin",
    "version": "0.1.3",
    "author": {
      "name": "James Andersen @jandersen78"
    },
    "description": "Replace string tokens in the contents of a file.",
    "peerDependencies": {
      "webpack": "^1.4.2 || >=2.2.0"
    },
    "dependencies": {
      "async": "~0.2.10",
      "loader-utils": "~0.2.3"
    },
    "devDependencies": {
      "mocha": "^2.2.1",
      "webpack": "^2.2.1"
    },
    "optionalDependencies": {
      "css-loader": "^0.9.1",
      "file-loader": "^0.8.1",
      "style-loader": "^0.8.3"
    },
    "homepage": "http://github.com/jamesandersen/string-replace-webpack-plugin",
    "repository": {
      "type": "git",
      "url": "http://github.com/jamesandersen/string-replace-webpack-plugin.git"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://www.opensource.org/licenses/mit-license.php"
      }
    ],
    "bugs": {
      "url": "https://github.com/jamesandersen/string-replace-webpack-plugin/issues"
    },
    "main": "index.js",
    "scripts": {
      "test": "mocha test"
    },
    "keywords": [
      "webpack",
      "string",
      "replace",
      "plugin"
    ],
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-string-replace-webpack-plugin-0.1.3-73c657e759d66cfe80ae1e0cf091aa256d0e715c/package.json",
    "readmeFilename": "README.md",
    "readme": "# string replace plugin for webpack\n\n## Usage example\n\n``` javascript\nvar StringReplacePlugin = require(\"string-replace-webpack-plugin\");\nmodule.exports = {\n   module: {\n      loaders: [\n         // configure replacements for file patterns\n         { \n            test: /index.html$/,\n            loader: StringReplacePlugin.replace({\n                replacements: [\n                    {\n                        pattern: /<!-- @secret (\\w*?) -->/ig,\n                        replacement: function (match, p1, offset, string) {\n                            return secrets.web[p1];\n                        }\n                    }\n                ]})\n            }\n      ]\n   },\n   plugins: [\n      // an instance of the plugin must be present\n      new StringReplacePlugin()\n   ]\n}\n```\n\nThis allows for arbitrary strings to be replaced as part of the module build process.  The original intent is to replace API\nkeys in modules prior to deployment.\n\n## API\n\n``` javascript\nStringReplacePlugin.replace([nextLoaders: string], options, [prevLoaders: string])\n```\n\n* `nextLoaders` loaders to follow the replacement\n* `options`\n  * `replacements` disables the plugin\n    * `pattern` a regex to match against the file contents\n    * `replacement` an ECMAScript [string replacement function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_function_as_a_parameter)\n* `prevLoaders` loaders to apply prior to the replacement\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/string-replace-webpack-plugin/-/string-replace-webpack-plugin-0.1.3.tgz#73c657e759d66cfe80ae1e0cf091aa256d0e715c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/string-replace-webpack-plugin/-/string-replace-webpack-plugin-0.1.3.tgz",
    "hash": "73c657e759d66cfe80ae1e0cf091aa256d0e715c",
    "registry": "npm",
    "packageName": "string-replace-webpack-plugin"
  },
  "registry": "npm",
  "hash": "73c657e759d66cfe80ae1e0cf091aa256d0e715c"
}