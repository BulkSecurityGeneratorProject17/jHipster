{
  "manifest": {
    "name": "css-loader",
    "version": "0.9.1",
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "description": "css loader module for webpack",
    "dependencies": {
      "csso": "1.3.x",
      "source-map": "~0.1.38",
      "loader-utils": "~0.2.2"
    },
    "devDependencies": {
      "mocha": "1.8.x",
      "should": "1.1.x"
    },
    "scripts": {
      "test": "mocha --reporter spec"
    },
    "repository": {
      "type": "git",
      "url": "git@github.com:webpack/css-loader.git"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://www.opensource.org/licenses/mit-license.php"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-css-loader-0.9.1-2e1aa00ce7e30ef2c6a7a4b300a080a7c979e0dc/package.json",
    "readmeFilename": "README.md",
    "readme": "# css loader for webpack\n\n## installation\n\n`npm install css-loader`\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar css = require(\"css!./file.css\");\n// => returns css code from file.css, resolves imports and url(...)\n```\n\n`@import` and `url(...)` are interpreted like `require()` and will be resolved by the css-loader.\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader)\nand the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see below).\n\nTo be compatible with existing css files:\n* `url(image.png)` => `require(\"./image.png\")`\n* `url(~module/image.png)` => `require(\"module/image.png\")`\n\n### Example config\n\nThis webpack config can load css files, embed small png images as Data Urls and jpg images as files.\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.css$/, loader: \"style-loader!css-loader\" },\n      { test: /\\.png$/, loader: \"url-loader?limit=100000&mimetype=image/png\" },\n      { test: /\\.jpg$/, loader: \"file-loader\" }\n    ]\n  }\n};\n```\n\n### 'Root-relative' urls\n\nFor urls that start with a `/`, the default behavior is to not translate them:\n* `url(/image.png)` => `url(/image.png)`\n\nIf a `root` query parameter is set, however, it will be prepended to the url\nand then translated:\n\nWith a config like:\n\n``` javascript\n    loaders: [\n      { test: /\\.css$/, loader: \"style-loader!css-loader?root=.\" },\n      ...\n    ]\n```\n\nThe result is:\n\n* `url(/image.png)` => `require(\"./image.png\")`\n\n### SourceMaps\n\nTo include SourceMaps set the `sourceMap` query param.\n\n`require(\"css-loader?sourceMap!./file.css\")`\n\nI. e. the extract-text-webpack-plugin can handle them.\n\n### importing and chained loaders\n\nThe query parameter `importLoaders` allow to configure which loaders should be applied to `@import`ed resources.\n\n`importLoaders` (int): That many loaders after the css-loader are used to import resources.\n\nExamples:\n\n``` js\nrequire(\"style-loader!css-loader?importLoaders=1!autoprefixer-loader!...\")\n// => imported resources are handled this way:\nrequire(\"css-loader?importLoaders=1!autoprefixer-loader!...\")\n\nrequire(\"style-loader!css-loader!stylus-loader!...\")\n// => imported resources are handled this way:\nrequire(\"css-loader!...\")\n```\n\n### Minification\n\nBy default the css-loader minimizes the css if specified by the module system.\n\nIn some cases the structural minification is destructive to the css, so you can disable it with the `disableStructuralMinification` query parameter. `require(\"css-loader?disableStructuralMinification!./file.css\")`\n\nYou can also disable or enforce minification with the `minimize` query parameter.\n\n`require(\"css-loader?minimize!./file.css\")` (enforced)\n\n`require(\"css-loader?-minimize!./file.css\")` (disabled)\n\nYou cannot use minimize with SourceMaps.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/css-loader/-/css-loader-0.9.1.tgz#2e1aa00ce7e30ef2c6a7a4b300a080a7c979e0dc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/css-loader/-/css-loader-0.9.1.tgz",
    "hash": "2e1aa00ce7e30ef2c6a7a4b300a080a7c979e0dc",
    "registry": "npm",
    "packageName": "css-loader"
  },
  "registry": "npm",
  "hash": "2e1aa00ce7e30ef2c6a7a4b300a080a7c979e0dc"
}