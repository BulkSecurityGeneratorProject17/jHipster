{
  "manifest": {
    "name": "puppeteer",
    "version": "0.10.2",
    "description": "A high-level API to control headless Chrome over the DevTools Protocol",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/GoogleChrome/puppeteer.git"
    },
    "engines": {
      "node": ">=6.4.0"
    },
    "scripts": {
      "unit": "jasmine test/test.js",
      "debug-unit": "DEBUG_TEST=true node --inspect-brk ./node_modules/.bin/jasmine test/test.js",
      "test-doclint": "jasmine utils/doclint/check_public_api/test/test.js && jasmine utils/doclint/preprocessor/test.js",
      "test": "npm run lint --silent && npm run coverage && npm run test-doclint && npm run test-node6-transformer",
      "install": "node install.js",
      "lint": "([ \"$CI\" = true ] && eslint --quiet -f codeframe . || eslint .) && npm run doc",
      "doc": "node utils/doclint/cli.js",
      "coverage": "COVERAGE=true npm run unit",
      "test-node6-transformer": "jasmine utils/node6-transform/test/test.js",
      "build": "node utils/node6-transform/index.js",
      "unit-node6": "jasmine node6-test/test.js"
    },
    "author": {
      "name": "The Chromium Authors"
    },
    "license": "Apache-2.0",
    "dependencies": {
      "debug": "^2.6.8",
      "extract-zip": "^1.6.5",
      "https-proxy-agent": "^2.1.0",
      "mime": "^1.3.4",
      "progress": "^2.0.0",
      "proxy-from-env": "^1.0.0",
      "rimraf": "^2.6.1",
      "ws": "^3.0.0"
    },
    "puppeteer": {
      "chromium_revision": "497674"
    },
    "devDependencies": {
      "commonmark": "^0.27.0",
      "eslint": "^4.0.0",
      "esprima": "^4.0.0",
      "jasmine": "^2.6.0",
      "markdown-toc": "^1.1.0",
      "minimist": "^1.2.0",
      "ncp": "^2.0.0",
      "pdfjs-dist": "^1.8.595",
      "pixelmatch": "^4.0.2",
      "pngjs": "^3.2.0",
      "text-diff": "^1.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v1/npm-puppeteer-0.10.2-b4a959a722bf626ca481f2aeba11fdb810f2c98f/package.json",
    "readmeFilename": "README.md",
    "readme": "# Puppeteer [![Build Status](https://travis-ci.org/GoogleChrome/puppeteer.svg?branch=master)](https://travis-ci.org/GoogleChrome/puppeteer) [![NPM puppeteer package](https://img.shields.io/npm/v/puppeteer.svg)](https://npmjs.org/package/puppeteer)\n\n<img src=\"https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png\" height=\"200\" align=\"right\">\n\n###### [API](docs/api.md) | [FAQ](#faq) | [Contributing](https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md)\n\n> Puppeteer is a Node library which provides a high-level API to control [headless](https://developers.google.com/web/updates/2017/04/headless-chrome) Chrome over the [DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/). It can also be configured to use full (non-headless) Chrome.\n\n###### What can I do?\n\nMost things that you can do manually in the browser can be done using Puppeteer! Here are a few examples to get you started:\n\n* Generate screenshots and PDFs of pages.\n* Crawl a SPA and generate pre-rendered content (i.e. \"SSR\").\n* Scrape content from websites.\n* Automate form submission, UI testing, keyboard input, etc.\n* Create an up-to-date, automated testing environment. Run your tests directly in the latest version of Chrome using the latest JavaScript and browser features.\n* Capture a [timeline trace](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference) of your site to help diagnose performance issues.\n\n## Getting Started\n\n### Installation\n\n> *Note: Puppeteer requires at least Node v6.4.0, but the examples below use async/await which is only supported in Node v7.6.0 or greater*\n\nTo use Puppeteer in your project, run:\n```\nyarn add puppeteer\n# or \"npm i puppeteer\"\n```\n\n> **Note**: When you install Puppeteer, it downloads a recent version of Chromium (~71Mb Mac, ~90Mb Linux, ~110Mb Win) that is guaranteed to work with the API.\n\n### Usage\n\nPuppeteer will be familiar to people using other browser testing frameworks. You create an instance\nof `Browser`, open pages, and then manipulate them with [Puppeteer's API](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#).\n\n**Example** - navigating to https://example.com and saving a screenshot as *example.png*:\n\n```js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://example.com');\n  await page.screenshot({path: 'example.png'});\n\n  browser.close();\n})();\n```\n\nPuppeteer sets an initial page size to 800px x 600px, which defines the screenshot size. The page size can be customized  with [`Page.setViewport()`](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagesetviewportviewport).\n\n**Example** - create a PDF.\n\n```js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {waitUntil: 'networkidle'});\n  await page.pdf({path: 'hn.pdf', format: 'A4'});\n\n  browser.close();\n})();\n```\n\nSee [`Page.pdf()`](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagepdfoptions) for more information about creating pdfs.\n\n**Example** - evaluate script in the context of the page\n\n```js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://example.com');\n\n  // Get the \"viewport\" of the page, as reported by the page.\n  const dimensions = await page.evaluate(() => {\n    return {\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight,\n      deviceScaleFactor: window.devicePixelRatio\n    };\n  });\n\n  console.log('Dimensions:', dimensions);\n\n  browser.close();\n})();\n```\n\nSee [`Page.evaluate()`](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pageevaluatepagefunction-args) for more information on `evaluate` and related methods like `evaluateOnNewDocument` and `exposeFunction`.\n\n## Default runtime settings\n\n**1. Uses Headless mode**\n\nPuppeteer launches Chromium in [headless mode](https://developers.google.com/web/updates/2017/04/headless-chrome). To launch a full version of Chromium, set the ['headless' option](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions) when launching a browser:\n\n```js\nconst browser = await puppeteer.launch({headless: false}); // default is true\n```\n\n**2. Runs a bundled version of Chromium**\n\nBy default, Puppeteer downloads and uses a specific version of Chromium so its API\nis guaranteed to work out of the box. To use Puppeteer with a different version of Chrome,\npass in the executable's path when creating a `Browser` instance:\n\n```js\nconst browser = await puppeteer.launch({executablePath: '/path/to/Chrome'});\n```\n\nSee [`Puppeteer.launch()`](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions) for more information.\n\n**3. Creates a fresh user profile**\n\nPuppeteer creates its own Chromium user profile which it **cleans up on every run**.\n\n## API Documentation\n\nExplore the [API documentation](docs/api.md) and [examples](https://github.com/GoogleChrome/puppeteer/tree/master/examples/) to learn more.\n\n## Debugging tips\n\n1. Turn off headless mode - sometimes it's useful to see what the browser is\n   displaying. Instead of launching in headless mode, launch a full version of\n   Chrome using  `headless: false`:\n\n    ```js\n    const browser = await puppeteer.launch({headless: false});\n    ```\n\n1. Slow it down - the `slowMo` option slows down Puppeteer operations by the\n   specified amount of milliseconds. It's another way to help see what's going on.\n\n    ```js\n    const browser = await puppeteer.launch({\n      headless: false,\n      slowMo: 250 // slow down by 250ms\n    });\n    ```\n\n1. Capture console output - You can listen for the `console` event.\n   This is also handy when debugging code in `page.evaluate()`:\n\n    ```js\n    page.on('console', (...args) => console.log('PAGE LOG:', ...args));\n\n    await page.evaluate(() => console.log(`url is ${location.href}`));\n    ```\n\n\n1. Enable verbose logging - All public API calls and internal protocol traffic\n   will be logged via the [`debug`](https://github.com/visionmedia/debug) module.\n\n   ```sh\n   # Basic verbose logging\n   env DEBUG=\"*\" node script.js\n\n   # Debug output can be enabled/disabled by namespace\n   env DEBUG=\"*,-*:protocol\" node script.js # everything BUT protocol messages\n   env DEBUG=\"*:session\" node script.js # protocol session messages (protocol messages to targets)\n   env DEBUG=\"*:mouse,*:keyboard\" node script.js # only Mouse and Keyboard API calls\n\n   # Protocol traffic can be rather noisy. This example filters out all Network domain messages\n   env DEBUG=\"*\" env DEBUG_COLORS=true node script.js 2>&1 | grep -v '\"Network'\n   ```\n\n\n\n\n## Contributing to Puppeteer\n\nCheck out [contributing guide](https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md) to get an overview of Puppeteer development.\n\n# FAQ\n\n#### Q: Which Chromium version does Puppeteer use?\n\nLook for `chromium_revision` in [package.json](https://github.com/GoogleChrome/puppeteer/blob/master/package.json).\n\nPuppeteer bundles Chromium to ensure that the latest features it uses are guaranteed to be available. As the DevTools protocol and browser improve over time, Puppeteer will be updated to depend on newer versions of Chromium.\n\n#### Q: What is the difference between Puppeteer, Selenium / WebDriver, and PhantomJS?\n\nSelenium / WebDriver is a well-established cross-browser API that is useful for testing cross-browser support.\n\nPuppeteer works only with Chrome. However, many teams only run unit tests with a single browser (e.g. PhantomJS). In non-testing use cases, Puppeteer provides a powerful but simple API because it's only targeting one browser that enables you to rapidly develop automation scripts.\n\nPuppeteer uses the latest versions of Chromium.\n\n#### Q: Who maintains Puppeteer?\n\nThe Chrome DevTools team maintains the library, but we'd love your help and expertise on the project!\nSee [Contributing](https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md).\n\n#### Q: Why is the Chrome team building Puppeteer?\n\nThe goals of the project are simple:\n\n- Provide a slim, canonical library that highlights the capabilities of the [DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/).\n- Provide a reference implementation for similar testing libraries. Eventually, these\nother frameworks could adopt Puppeteer as their foundational layer.\n- Grow the adoption of headless/automated browser testing.\n- Help dogfood new DevTools Protocol features...and catch bugs!\n- Learn more about the pain points of automated browser testing and help fill those gaps.\n\n#### Q: How does Puppeteer compare with other headless Chrome projects?\n\nThe past few months have brought [several new libraries for automating headless Chrome](https://medium.com/@kensoh/chromeless-chrominator-chromy-navalia-lambdium-ghostjs-autogcd-ef34bcd26907). As the team authoring the underlying DevTools Protocol, we're excited to witness and support this flourishing ecosystem.\n\nWe've reached out to a number of these projects to see if there are opportunities for collaboration, and we're happy to do what we can to help.\n",
    "licenseText": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/puppeteer/-/puppeteer-0.10.2.tgz#b4a959a722bf626ca481f2aeba11fdb810f2c98f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/puppeteer/-/puppeteer-0.10.2.tgz",
    "hash": "b4a959a722bf626ca481f2aeba11fdb810f2c98f",
    "registry": "npm",
    "packageName": "puppeteer"
  },
  "registry": "npm",
  "hash": "b4a959a722bf626ca481f2aeba11fdb810f2c98f"
}